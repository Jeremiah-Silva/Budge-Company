{"ast":null,"code":"var _jsxFileName = \"/Users/jeremia_silva/Desktop/Jeremiah_Silva/Project/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\n/** Alternative way to write functions in Javascript.\n\n** ES6 **\nconst App = () =>  {\n   const expenses = [ \n     .\n     .\n   ]\n}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2022');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear); // console.log('Expenses.js');\n    // console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n/**\nreturn (\n    <div>\n      <Card className=\"expenses\">\n      <ExpensesFilter selected={filteredYear} \n                      onChangeFilter={filterChangeHandler} \n      />\n      {filteredExpenses.length === 0 && <p>No expanses found.</p>}\n      {filteredExpenses.length > 0 && \n        filteredExpenses.map((expense) => (\n      <ExpenseItem \n            key={expense.id} //special prop\n            title={expense.title} \n            amount={expense.amount} \n            date={expense.date} \n            />\n           ))} \n       </Card>\n    </div>\n);\n};\n*/\n\n\n_s(Expenses, \"VsY+CdjhJzXvjVXvetgq5EU6jt4=\");\n\n_c = Expenses;\nexport default Expenses;\n/**<ExpenseItem    \n          /** When we chance the name of props we need to change here as well; for example Expenses.js line 19.\n          title={props.items[0].title} \n          amount={props.items[0].amount} \n          date={props.items[0].date}\n          />\n          <ExpenseItem \n          title={props.items[1].title} \n          amount={props.items[1].amount} \n          date={props.items[1].date}\n          />\n          <ExpenseItem \n          title={props.items[2].title} \n          amount={props.items[2].amount} \n          date={props.items[2].date}\n          />\n          <ExpenseItem \n          title={props.items[3].title} \n          amount={props.items[3].amount} \n          date={props.items[3].date}\n          /> */\n\n/**\n * Alternative way to write the same thing.\n *  \nlet expensesContent = <p>No expenses found.</p>;\n   \nif (filteredExpenses.length > 0) {\n  expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount} \n        date={expense.date}\n      />\n    ));\n  }\n\nreturn (\n      <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} \n                        onChangeFilter={filterChangeHandler} \n        />\n        {expensesContent}\n         </Card>\n      </div>\n  );\n};\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["/Users/jeremia_silva/Desktop/Jeremiah_Silva/Project/react-complete-guide/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\n\n/** Alternative way to write functions in Javascript.\n\n** ES6 **\nconst App = () =>  {\n   const expenses = [ \n     .\n     .\n   ]\n}\n*/\n\nconst Expenses = (props) => {\nconst [filteredYear, setFilteredYear] = useState('2022');\n\n  const filterChangeHandler =  selectedYear => {\n    setFilteredYear(selectedYear);\n    // console.log('Expenses.js');\n    // console.log(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear; \n  });\n\n  let expensesContent = <p>No expenses found.</p>;\n   \n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount} \n          date={expense.date}\n        />\n      ));\n    }\n  \n  return (\n      <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} \n                        onChangeFilter={filterChangeHandler} \n        />\n        {expensesContent}\n         </Card>\n      </div>\n  );\n};\n\n\n  /**\n  return (\n      <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} \n                        onChangeFilter={filterChangeHandler} \n        />\n        {filteredExpenses.length === 0 && <p>No expanses found.</p>}\n        {filteredExpenses.length > 0 && \n          filteredExpenses.map((expense) => (\n        <ExpenseItem \n              key={expense.id} //special prop\n              title={expense.title} \n              amount={expense.amount} \n              date={expense.date} \n              />\n             ))} \n         </Card>\n      </div>\n  );\n};\n*/\n\nexport default Expenses;\n\n\n\n\n  /**<ExpenseItem    \n            /** When we chance the name of props we need to change here as well; for example Expenses.js line 19.\n            title={props.items[0].title} \n            amount={props.items[0].amount} \n            date={props.items[0].date}\n            />\n            <ExpenseItem \n            title={props.items[1].title} \n            amount={props.items[1].amount} \n            date={props.items[1].date}\n            />\n            <ExpenseItem \n            title={props.items[2].title} \n            amount={props.items[2].amount} \n            date={props.items[2].date}\n            />\n            <ExpenseItem \n            title={props.items[3].title} \n            amount={props.items[3].amount} \n            date={props.items[3].date}\n            /> */\n\n\n\n/**\n * Alternative way to write the same thing.\n *  \nlet expensesContent = <p>No expenses found.</p>;\n   \nif (filteredExpenses.length > 0) {\n  expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount} \n        date={expense.date}\n      />\n    ));\n  }\n\nreturn (\n      <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} \n                        onChangeFilter={filterChangeHandler} \n        />\n        {expensesContent}\n         </Card>\n      </div>\n  );\n};\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EAEE,MAAMQ,mBAAmB,GAAIC,YAAY,IAAI;IAC3CF,eAAe,CAACE,YAAD,CAAf,CAD2C,CAE3C;IACA;EACD,CAJD;;EAKA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;EACD,CAFwB,CAAzB;;EAIA,IAAIW,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EAEA,IAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;IAC/BD,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACnC,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACO,KAFjB;MAGE,MAAM,EAAEP,OAAO,CAACQ,MAHlB;MAIE,IAAI,EAAER,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACS,EADf;MAAA;MAAA;MAAA;IAAA,QADc,CAAlB;EAQC;;EAEH,oBACI;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACA,QAAC,cAAD;QAAgB,QAAQ,EAAEhB,YAA1B;QACgB,cAAc,EAAEE;MADhC;QAAA;QAAA;QAAA;MAAA,QADA,EAICS,eAJD;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADJ;AAUD,CAnCD;AAsCE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA3DMb,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf;AAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}