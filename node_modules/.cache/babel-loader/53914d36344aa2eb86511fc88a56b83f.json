{"ast":null,"code":"var _jsxFileName = \"/Users/jeremia_silva/Desktop/Jeremiah_Silva/Project/react-complete-guide/src/components/ExpenseDate.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseDate(props) {\n  //The way to adapted props instead of expenseDate.toISOString\n  //<div>{props.date.toISOString()} </div>*/}\n  //Month - props.date.toLocaleString(we can put two arguments - 1) Language 2)Date should be formated \"  \")\n  //We can define the size of the month display using for example 'long'*/\n  const month = props.date.toLocaleString('en-US', {\n    month: 'long'\n  }); //How to setup the day of month propety\n\n  const day = props.date.toLocaleString('en-US', {\n    day: '2-digit'\n  }); //How to setup the year with 4 digits.\n\n  const year = props.date.getFullYear();\n  /** To maintaing the code cleaned we need to put it on const and apply this function to our <div>  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpenseDate;\nexport default ExpenseDate;\n/** developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString */\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear"],"sources":["/Users/jeremia_silva/Desktop/Jeremiah_Silva/Project/react-complete-guide/src/components/ExpenseDate.js"],"sourcesContent":["function ExpenseDate(props) {\n    //The way to adapted props instead of expenseDate.toISOString\n    //<div>{props.date.toISOString()} </div>*/}\n    //Month - props.date.toLocaleString(we can put two arguments - 1) Language 2)Date should be formated \"  \")\n    //We can define the size of the month display using for example 'long'*/\n     const month = props.date.toLocaleString('en-US', { month: 'long' });\n     //How to setup the day of month propety\n     const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n     //How to setup the year with 4 digits.\n     const year = props.date.getFullYear();\n/** To maintaing the code cleaned we need to put it on const and apply this function to our <div>  */\nreturn (\n    <div>\n      <div>{month}</div>\n      <div>{year}</div>\n      <div>{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate\n\n/** developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString */"],"mappings":";;;AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;EACxB;EACA;EACA;EACA;EACC,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;IAAEF,KAAK,EAAE;EAAT,CAAnC,CAAd,CALuB,CAMvB;;EACA,MAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;IAAEC,GAAG,EAAE;EAAP,CAAnC,CAAZ,CAPuB,CAQvB;;EACA,MAAMC,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;EACL;;EACA,oBACI;IAAA,wBACE;MAAA,UAAML;IAAN;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAMI;IAAN;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UAAMD;IAAN;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOC;;KAlBQL,W;AAoBT,eAAeA,WAAf;AAEA"},"metadata":{},"sourceType":"module"}